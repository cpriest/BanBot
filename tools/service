#!/bin/bash
# chkconfig: 2345 99 01
# processname: BanBotMilter
# description: Controls the BanBot Milter Service

. /etc/rc.d/init.d/functions

NAME=BanBot
DESC="${NAME} daemon"

USERNAME="postfix"
GROUP="postfix"
PROGRAM="/usr/bin/BanBot"
PID_FILE="/var/run/${NAME}.pid"
DEBUG_CHANNELS="proc libmilter watcher"

ORDERLY_WAIT=10
DISORDERLY_WAIT=30

timer_start() {
	time_start=`date +%s`;
}
timer_update() {
	time_sofar=$((`date +%s` - $time_start));
}

running() {
	if [ -f ${PID_FILE} ]; then
		kill -0 `cat ${PID_FILE}` 2>/dev/null && return 0;
	fi;
	return 1;
}

start() {
	running && echo "${NAME} already running, pid=`cat ${PID_FILE}`" && exit 1;
	echo -n "Starting ${NAME}...";
	${PROGRAM} -u ${USERNAME} -g ${GROUP} -p ${PID_FILE} -d -dc ${DEBUG_CHANNELS} || { echo "FAILED (Could Not Start)"; }

	timer_start;
	while [ true ]; do
		sleep 1;
		running && break;
		echo -n ".";
		timer_update;
		[[ ${time_sofar} -gt ${ORDERLY_WAIT} ]] && { echo "FAILED (Started but no longer running after ${time_sofar} seconds)"; return 1; }
	done;
	
	echo "OK (pid=`cat ${PID_FILE}`)";
	return 0;
}

stop() {
	running || { echo "${NAME} is not running" && return 0; }
	
	echo -n "Stopping ${NAME}...";

	timer_start;
	
	ORDERLY_SHUTDOWN=1;
	kill -INT `cat ${PID_FILE}`;
	while [ true ]; do
		sleep 1;
	 	timer_update;
	 	running || break;

		if [ ${ORDERLY_SHUTDOWN} -eq 1 ]; then
			echo -n ".";
		 	[[ ${time_sofar} -gt ${ORDERLY_WAIT} ]] && {
	 			kill -INT `cat ${PID_FILE}`;
	 			ORDERLY_SHUTDOWN=0;
	 		}
	 	else
			echo -n "!";
	 		[[ ${time_sofar} -gt ${DISORDERLY_WAIT} ]] && echo "FAILED \(-INT and -KILL\) after ${time_sofar} seconds..." && exit 1;
	 	fi;
	done;

	timer_update;
	[ ${ORDERLY_SHUTDOWN} -eq 1 ] && echo -n 'OK (Orderly) ' || echo -n 'OK (Disorderly) '
	echo "after ${time_sofar} seconds...";
}

restart() {
	stop && start;
}

reload() {
	running || { echo "${NAME} is not running" && exit 1; }

	echo "Reloading ${NAME}...OK";
	kill -HUP `cat ${PID_FILE}`;
}

case "$1" in
  start)	start;;
  stop)		stop;;
  restart)	restart;;
  reload)	reload;;
  *)
	echo "Usage: service ${NAME} {start|stop|restart|reload}" >&2
	exit 3
  ;;
esac;

exit 0
